openapi: 3.0.0
servers: []
info: 
  title: Invasive Plant API
  description: This API intended to deploy on aws API Gateway
  version: "1.0.0"
x-amazon-apigateway-request-validators: 
  all:
    validateRequestParameters : true
    validateRequestBody : true
  params-only : 
    validateRequestParameters" : true
    validateRequestBody" : false

x-common-options: &commonOptions
  options:
    summary: CORS support
    description: |
      Enable CORS by returning correct headers
    responses:
      200:
        $ref: '#/components/responses/Success'
    x-amazon-apigateway-integration:
      type: mock
      requestTemplates:
        application/json: |
          {
            "statusCode" : 200
          }
      responses:
        default:
          statusCode: "200"
          responseParameters:
            method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key'''
            method.response.header.Access-Control-Allow-Methods: '''*'''
            method.response.header.Access-Control-Allow-Origin: '''*'''
          responseTemplates:
            application/json: |
              {}
paths:
  /appData:
    <<: *commonOptions
    get: 
      responses:
        "200": 
          description: Data Available
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "429":
          description: Too Many Requests
        "500":
          description: Internal Server Error
      x-amazon-apigateway-integration:
        uri:
          Fn::Sub: "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${IntegLambRegion.Arn}/invocations"
        passthroughBehavior: "when_no_match"
        httpMethod: "POST"
        type: "aws_proxy"
    post: 
      responses:
        "200": 
          description: Data Available
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "429":
          description: Too Many Requests
        "500":
          description: Internal Server Error 
      x-amazon-apigateway-integration:
        uri:
          Fn::Sub: "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${IntegLambRegion.Arn}/invocations"
        passthroughBehavior: "when_no_match"
        httpMethod: "POST"
        type: "aws_proxy"
    put: 
      responses:
        "200": 
          description: Data Available
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "429":
          description: Too Many Requests
        "500":
          description: Internal Server Error 
      x-amazon-apigateway-integration:
        uri:
          Fn::Sub: "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${IntegLambRegion.Arn}/invocations"
        passthroughBehavior: "when_no_match"
        httpMethod: "POST"
        type: "aws_proxy"
    delete: 
      responses:
        "200": 
          description: Data Available
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "429":
          description: Too Many Requests
        "500":
          description: Internal Server Error 
      x-amazon-apigateway-integration:
        uri:
          Fn::Sub: "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${IntegLambRegion.Arn}/invocations"
        passthroughBehavior: "when_no_match"
        httpMethod: "POST"
        type: "aws_proxy"
components:
  responses:
    Success:
      description: Request success
      headers:
        Access-Control-Allow-Origin:
          schema:
            type: string
        Access-Control-Allow-Methods:
          schema:
            type: string
        Access-Control-Allow-Headers:
          schema:
            type: string
      content: {}